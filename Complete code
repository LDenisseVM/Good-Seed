## Cargar datos

El conjunto de datos se almacena en la carpeta `/datasets/faces/`
- La carpeta `final_files` con 7600 fotos
- El archivo `labels.csv` con leyendas, con dos columnas: `file_name` y `real_age`

Dado que el número de archivos de imágenes es bastante elevado, se recomienda evitar leerlos todos a la vez, ya que esto consumiría muchos recursos computacionales. Te recomendamos crear un generador con ImageDataGenerator. Este método se explicó en el capítulo 3, lección 7 de este curso.

El archivo de etiqueta se puede cargar como un archivo CSV habitual.

import pandas as pd
from tensorflow.keras.preprocessing.image import ImageDataGenerator
import numpy as np
from PIL import Image
import matplotlib.pyplot as plt

data= pd.read_csv('/datasets/faces/labels.csv')

data.info()

datagen = ImageDataGenerator(rescale=1./255)

datagen_flow = datagen.flow_from_dataframe(
        dataframe=data,
        directory='/datasets/faces/final_files/',
        x_col='file_name',
        y_col='real_age',
        class_mode='raw',
        batch_size=16)


batch_images, batches_label = next(datagen_flow)
print(batch_images.shape)

for i in range(batch_images.shape[0]):
    image = batch_images[i]
    array = np.array(image)
    plt.imshow(array)
    plt.show()



## EDA

data.boxplot('real_age')

data.hist('real_age')


### Conclusiones

Vemos que la mayoría de las fotos son de personas entre 20 y 30 años, eso podría afectar un poco nuestro modelo, pues al ser mayoría, puede que el modelo no distinga bien cuando se es más chico, o sobre todo más grande, pues hay aun menos de 60+

## Modelado

Define las funciones necesarias para entrenar tu modelo en la plataforma GPU y crear un solo script que las contenga todas junto con la sección de inicialización.

Para facilitar esta tarea, puedes definirlas en este notebook y ejecutar un código listo en la siguiente sección para componer automáticamente el script.

Los revisores del proyecto también verificarán las definiciones a continuación, para que puedan comprender cómo construiste el modelo.

import pandas as pd

import tensorflow as tf

from tensorflow.keras.preprocessing.image import ImageDataGenerator
from tensorflow.keras.applications.resnet import ResNet50
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import GlobalAveragePooling2D, Dense, Dropout, Flatten, Conv2D, MaxPooling2D
from tensorflow.keras.optimizers import Adam
from keras.losses import mean_absolute_error as eam

datagen = ImageDataGenerator(validation_split=.25, rescale=1./255)

def load_train(path):
    
    train_gen_flow = datagen.flow_from_dataframe(
        dataframe=data,
        directory='/datasets/faces/final_files/',
        x_col='file_name',
        y_col='real_age',
        class_mode='raw',
        subset='training',
        batch_size=16,
        seed=12345)
    
    return train_gen_flow

def load_test(path):
    
    test_gen_flow = datagen.flow_from_dataframe(
        dataframe=data,
        directory='/datasets/faces/final_files/',
        x_col='file_name',
        y_col='real_age',
        class_mode='raw',
        subset='validation',
        batch_size=16,
        seed=12345)
    return test_gen_flow


def create_model(input_shape):
    
    optimizer = Adam(lr=0.0005)
    backbone = ResNet50(input_shape=input_shape, weights='imagenet', include_top=False)

    model = Sequential()
    model.add(backbone)
    model.add(GlobalAveragePooling2D())
    model.add(Dense(1, activation='relu'))
    model.compile(
        loss=eam, optimizer=optimizer, metrics=['mae'])

    return model


def train_model(
    model, 
    train_data, 
    test_data, 
    batch_size=None, 
    epochs=20,
    steps_per_epoch=None, 
    validation_steps=None):
    
    if steps_per_epoch is None:
        steps_per_epoch = len(train_data)
    if validation_steps is None:
        validation_steps = len(test_data)
    
    model.fit(train_data,
          validation_data=test_data,
          batch_size=batch_size,
          epochs=epochs,
          steps_per_epoch=steps_per_epoch,
         validation_steps=validation_steps,
        verbose=2)

    return model


### Preparamos un script para ejecutarlo en la plataforma GPU


Colocamos aquí el resultado de la plataforma GPU como una celda Markdown.

2024-06-06 05:24:00.550808: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libnvinfer.so.6
2024-06-06 05:24:00.552933: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libnvinfer_plugin.so.6
Using TensorFlow backend.
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 7591 entries, 0 to 7590
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype 
---  ------     --------------  ----- 
 0   file_name  7591 non-null   object
 1   real_age   7591 non-null   int64 
dtypes: int64(1), object(1)
memory usage: 118.7+ KB
Found 7591 validated image filenames.
(16, 256, 256, 3)
Found 5694 validated image filenames.
Found 1897 validated image filenames.
2024-06-06 05:24:02.579419: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcuda.so.1
2024-06-06 05:24:02.627655: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2024-06-06 05:24:02.627869: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1555] Found device 0 with properties: 
pciBusID: 0000:00:1e.0 name: Tesla V100-SXM2-16GB computeCapability: 7.0
coreClock: 1.53GHz coreCount: 80 deviceMemorySize: 15.78GiB deviceMemoryBandwidth: 836.37GiB/s
2024-06-06 05:24:02.627914: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.1
2024-06-06 05:24:02.627952: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10
2024-06-06 05:24:02.630419: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcufft.so.10
2024-06-06 05:24:02.630796: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcurand.so.10
2024-06-06 05:24:02.633051: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusolver.so.10
2024-06-06 05:24:02.634353: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusparse.so.10
2024-06-06 05:24:02.634410: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudnn.so.7
2024-06-06 05:24:02.634552: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2024-06-06 05:24:02.634848: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2024-06-06 05:24:02.635015: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1697] Adding visible gpu devices: 0
2024-06-06 05:24:02.635459: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA
2024-06-06 05:24:02.643834: I tensorflow/core/platform/profile_utils/cpu_utils.cc:94] CPU Frequency: 2300015000 Hz
2024-06-06 05:24:02.644504: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x4e51150 initialized for platform Host (this does not guarantee that XLA will be used). Devices:
2024-06-06 05:24:02.644529: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version
2024-06-06 05:24:02.743992: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2024-06-06 05:24:02.744325: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x42b50d0 initialized for platform CUDA (this does not guarantee that XLA will be used). Devices:
2024-06-06 05:24:02.744346: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Tesla V100-SXM2-16GB, Compute Capability 7.0
2024-06-06 05:24:02.744618: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2024-06-06 05:24:02.744797: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1555] Found device 0 with properties: 
pciBusID: 0000:00:1e.0 name: Tesla V100-SXM2-16GB computeCapability: 7.0
coreClock: 1.53GHz coreCount: 80 deviceMemorySize: 15.78GiB deviceMemoryBandwidth: 836.37GiB/s
2024-06-06 05:24:02.744852: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.1
2024-06-06 05:24:02.744867: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10
2024-06-06 05:24:02.744895: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcufft.so.10
2024-06-06 05:24:02.744910: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcurand.so.10
2024-06-06 05:24:02.744924: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusolver.so.10
2024-06-06 05:24:02.744953: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcusparse.so.10
2024-06-06 05:24:02.744975: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudnn.so.7
2024-06-06 05:24:02.745054: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2024-06-06 05:24:02.745265: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2024-06-06 05:24:02.745409: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1697] Adding visible gpu devices: 0
2024-06-06 05:24:02.745451: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudart.so.10.1
2024-06-06 05:24:03.043585: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1096] Device interconnect StreamExecutor with strength 1 edge matrix:
2024-06-06 05:24:03.043655: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1102]      0 
2024-06-06 05:24:03.043672: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1115] 0:   N 
2024-06-06 05:24:03.044025: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2024-06-06 05:24:03.044368: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:981] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2024-06-06 05:24:03.044619: W tensorflow/core/common_runtime/gpu/gpu_bfc_allocator.cc:39] Overriding allow_growth setting because the TF_FORCE_GPU_ALLOW_GROWTH environment variable is set. Original config value was 0.
2024-06-06 05:24:03.044677: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1241] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 14988 MB memory) -> physical GPU (device: 0, name: Tesla V100-SXM2-16GB, pci bus id: 0000:00:1e.0, compute capability: 7.0)
Downloading data from https://github.com/keras-team/keras-applications/releases/download/resnet/resnet50_weights_tf_dim_ordering_tf_kernels_notop.h5

    8192/94765736 [..............................] - ETA: 1s
12271616/94765736 [==>...........................] - ETA: 0s
25042944/94765736 [======>.......................] - ETA: 0s
37789696/94765736 [==========>...................] - ETA: 0s
50790400/94765736 [===============>..............] - ETA: 0s
63856640/94765736 [===================>..........] - ETA: 0s
76824576/94765736 [=======================>......] - ETA: 0s
89538560/94765736 [===========================>..] - ETA: 0s
94773248/94765736 [==============================] - 0s 0us/step
<class 'tensorflow.python.keras.engine.sequential.Sequential'>
WARNING:tensorflow:sample_weight modes were coerced from
  ...
    to  
  ['...']
WARNING:tensorflow:sample_weight modes were coerced from
  ...
    to  
  ['...']
Train for 356 steps, validate for 119 steps
Epoch 1/20
2024-06-06 05:24:15.537217: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcublas.so.10
2024-06-06 05:24:15.790784: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcudnn.so.7
356/356 - 64s - loss: 11.4459 - mae: 11.4458 - val_loss: 12.8663 - val_mae: 12.8525
Epoch 2/20
356/356 - 42s - loss: 9.5850 - mae: 9.5859 - val_loss: 12.7607 - val_mae: 12.7511
Epoch 3/20
356/356 - 42s - loss: 8.5086 - mae: 8.5093 - val_loss: 9.6708 - val_mae: 9.6687
Epoch 4/20
356/356 - 42s - loss: 7.8874 - mae: 7.8877 - val_loss: 9.9394 - val_mae: 9.9262
Epoch 5/20
356/356 - 42s - loss: 7.2490 - mae: 7.2490 - val_loss: 9.0582 - val_mae: 9.0582
Epoch 6/20
356/356 - 42s - loss: 6.6843 - mae: 6.6843 - val_loss: 7.6102 - val_mae: 7.6128
Epoch 7/20
356/356 - 41s - loss: 6.2223 - mae: 6.2229 - val_loss: 8.8638 - val_mae: 8.8696
Epoch 8/20
356/356 - 42s - loss: 5.7725 - mae: 5.7725 - val_loss: 9.0091 - val_mae: 9.0067
Epoch 9/20
356/356 - 42s - loss: 5.3361 - mae: 5.3364 - val_loss: 8.3002 - val_mae: 8.3009
Epoch 10/20
356/356 - 42s - loss: 5.0193 - mae: 5.0192 - val_loss: 7.4838 - val_mae: 7.4780
Epoch 11/20
356/356 - 41s - loss: 4.7651 - mae: 4.7652 - val_loss: 7.4508 - val_mae: 7.4561
Epoch 12/20
356/356 - 41s - loss: 4.3180 - mae: 4.3185 - val_loss: 7.6102 - val_mae: 7.6128
Epoch 13/20
356/356 - 42s - loss: 4.0882 - mae: 4.0880 - val_loss: 7.9240 - val_mae: 7.9245
Epoch 14/20
356/356 - 42s - loss: 3.9065 - mae: 3.9062 - val_loss: 9.2056 - val_mae: 9.1897
Epoch 15/20
356/356 - 42s - loss: 3.6898 - mae: 3.6900 - val_loss: 7.5416 - val_mae: 7.5485
Epoch 16/20
356/356 - 40s - loss: 3.5259 - mae: 3.5260 - val_loss: 8.3248 - val_mae: 8.3238
Epoch 17/20
356/356 - 40s - loss: 3.3527 - mae: 3.3527 - val_loss: 7.5166 - val_mae: 7.5249
Epoch 18/20
356/356 - 40s - loss: 3.2821 - mae: 3.2821 - val_loss: 7.6711 - val_mae: 7.6645
Epoch 19/20
356/356 - 40s - loss: 3.1049 - mae: 3.1048 - val_loss: 7.2539 - val_mae: 7.2507
Epoch 20/20
356/356 - 40s - loss: 3.1153 - mae: 3.1155 - val_loss: 7.1830 - val_mae: 7.1856
WARNING:tensorflow:sample_weight modes were coerced from
  ...
    to  
  ['...']
119/119 - 10s - loss: 7.1830 - mae: 7.1856
Test MAE: 7.1856


## Conclusiones

El modelo logró identificar con éxito los restros de las personas, para calcular su edad, con un mae de: 7.1856 en el conjunto de evaluación 
